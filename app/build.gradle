/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}


applicationDefaultJvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9000"]


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // import a BOM
    implementation platform('org.glassfish.jersey:jersey-bom:3.0.5')

    implementation 'org.glassfish.jersey.media:jersey-media-json-binding'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    // For authentication & access-control
    implementation 'com.auth0:java-jwt:4.0.0'
    // Http Server
    implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http'
    // Dependency Injection (Seems like the HTTP server needs this)
    implementation 'org.glassfish.jersey.inject:jersey-hk2'
    // Generate getters/setters automatically
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
    
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.1')
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'jwt.java.examples.App'
}